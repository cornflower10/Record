package com.record.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.record.moudle.entity.LawCase;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "LAW_CASE".
*/
public class LawCaseDao extends AbstractDao<LawCase, Long> {

    public static final String TABLENAME = "LAW_CASE";

    /**
     * Properties of entity LawCase.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property IsPrint = new Property(1, boolean.class, "isPrint", false, "IS_PRINT");
        public final static Property LawCaseTitle = new Property(2, String.class, "lawCaseTitle", false, "LAW_CASE_TITLE");
        public final static Property DocPath = new Property(3, String.class, "docPath", false, "DOC_PATH");
        public final static Property Doc2Htmlpath = new Property(4, String.class, "doc2Htmlpath", false, "DOC2_HTMLPATH");
        public final static Property Date = new Property(5, String.class, "date", false, "DATE");
        public final static Property LawCaseInfo = new Property(6, String.class, "lawCaseInfo", false, "LAW_CASE_INFO");
        public final static Property Type = new Property(7, int.class, "type", false, "TYPE");
    }


    public LawCaseDao(DaoConfig config) {
        super(config);
    }
    
    public LawCaseDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"LAW_CASE\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"IS_PRINT\" INTEGER NOT NULL ," + // 1: isPrint
                "\"LAW_CASE_TITLE\" TEXT," + // 2: lawCaseTitle
                "\"DOC_PATH\" TEXT," + // 3: docPath
                "\"DOC2_HTMLPATH\" TEXT," + // 4: doc2Htmlpath
                "\"DATE\" TEXT," + // 5: date
                "\"LAW_CASE_INFO\" TEXT," + // 6: lawCaseInfo
                "\"TYPE\" INTEGER NOT NULL );"); // 7: type
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"LAW_CASE\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, LawCase entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getIsPrint() ? 1L: 0L);
 
        String lawCaseTitle = entity.getLawCaseTitle();
        if (lawCaseTitle != null) {
            stmt.bindString(3, lawCaseTitle);
        }
 
        String docPath = entity.getDocPath();
        if (docPath != null) {
            stmt.bindString(4, docPath);
        }
 
        String doc2Htmlpath = entity.getDoc2Htmlpath();
        if (doc2Htmlpath != null) {
            stmt.bindString(5, doc2Htmlpath);
        }
 
        String date = entity.getDate();
        if (date != null) {
            stmt.bindString(6, date);
        }
 
        String lawCaseInfo = entity.getLawCaseInfo();
        if (lawCaseInfo != null) {
            stmt.bindString(7, lawCaseInfo);
        }
        stmt.bindLong(8, entity.getType());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, LawCase entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getIsPrint() ? 1L: 0L);
 
        String lawCaseTitle = entity.getLawCaseTitle();
        if (lawCaseTitle != null) {
            stmt.bindString(3, lawCaseTitle);
        }
 
        String docPath = entity.getDocPath();
        if (docPath != null) {
            stmt.bindString(4, docPath);
        }
 
        String doc2Htmlpath = entity.getDoc2Htmlpath();
        if (doc2Htmlpath != null) {
            stmt.bindString(5, doc2Htmlpath);
        }
 
        String date = entity.getDate();
        if (date != null) {
            stmt.bindString(6, date);
        }
 
        String lawCaseInfo = entity.getLawCaseInfo();
        if (lawCaseInfo != null) {
            stmt.bindString(7, lawCaseInfo);
        }
        stmt.bindLong(8, entity.getType());
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public LawCase readEntity(Cursor cursor, int offset) {
        LawCase entity = new LawCase( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getShort(offset + 1) != 0, // isPrint
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // lawCaseTitle
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // docPath
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // doc2Htmlpath
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // date
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // lawCaseInfo
            cursor.getInt(offset + 7) // type
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, LawCase entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setIsPrint(cursor.getShort(offset + 1) != 0);
        entity.setLawCaseTitle(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setDocPath(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setDoc2Htmlpath(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setDate(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setLawCaseInfo(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setType(cursor.getInt(offset + 7));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(LawCase entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(LawCase entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(LawCase entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
