package com.record.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.record.moudle.entity.InvolvedPerson;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "INVOLVED_PERSON".
*/
public class InvolvedPersonDao extends AbstractDao<InvolvedPerson, Long> {

    public static final String TABLENAME = "INVOLVED_PERSON";

    /**
     * Properties of entity InvolvedPerson.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Type = new Property(1, int.class, "type", false, "TYPE");
        public final static Property Date = new Property(2, long.class, "date", false, "DATE");
        public final static Property Involved_name = new Property(3, String.class, "involved_name", false, "INVOLVED_NAME");
        public final static Property Involved_sex = new Property(4, String.class, "involved_sex", false, "INVOLVED_SEX");
        public final static Property Involved_nationality = new Property(5, String.class, "involved_nationality", false, "INVOLVED_NATIONALITY");
        public final static Property Involved_birth_date = new Property(6, String.class, "involved_birth_date", false, "INVOLVED_BIRTH_DATE");
        public final static Property Involved_age = new Property(7, String.class, "involved_age", false, "INVOLVED_AGE");
        public final static Property Involved_degree = new Property(8, String.class, "involved_degree", false, "INVOLVED_DEGREE");
        public final static Property Involved_native_place = new Property(9, String.class, "involved_native_place", false, "INVOLVED_NATIVE_PLACE");
        public final static Property Involved_drive_license_type = new Property(10, String.class, "involved_drive_license_type", false, "INVOLVED_DRIVE_LICENSE_TYPE");
        public final static Property Involved_drive_license_date = new Property(11, String.class, "involved_drive_license_date", false, "INVOLVED_DRIVE_LICENSE_DATE");
        public final static Property Involved_idcard = new Property(12, String.class, "involved_idcard", false, "INVOLVED_IDCARD");
        public final static Property Involved_native_address = new Property(13, String.class, "involved_native_address", false, "INVOLVED_NATIVE_ADDRESS");
        public final static Property Involved_address = new Property(14, String.class, "involved_address", false, "INVOLVED_ADDRESS");
        public final static Property Involved_mobile = new Property(15, String.class, "involved_mobile", false, "INVOLVED_MOBILE");
        public final static Property Car_no = new Property(16, String.class, "car_no", false, "CAR_NO");
        public final static Property Car_type = new Property(17, String.class, "car_type", false, "CAR_TYPE");
        public final static Property Thing_personnel_involved = new Property(18, String.class, "thing_personnel_involved", false, "THING_PERSONNEL_INVOLVED");
        public final static Property Thing_car = new Property(19, String.class, "thing_car", false, "THING_CAR");
        public final static Property Thing_date = new Property(20, String.class, "thing_date", false, "THING_DATE");
        public final static Property Thing_address = new Property(21, String.class, "thing_address", false, "THING_ADDRESS");
        public final static Property Thing_reason = new Property(22, String.class, "thing_reason", false, "THING_REASON");
        public final static Property Thing_losed = new Property(23, String.class, "thing_losed", false, "THING_LOSED");
        public final static Property Thing_ = new Property(24, String.class, "thing_", false, "THING_");
        public final static Property Thing_11 = new Property(25, String.class, "thing_11", false, "THING_11");
        public final static Property Thing_personnel_involved_basic = new Property(26, String.class, "thing_personnel_involved_basic", false, "THING_PERSONNEL_INVOLVED_BASIC");
        public final static Property Thing_car_basic = new Property(27, String.class, "thing_car_basic", false, "THING_CAR_BASIC");
        public final static Property Thing_road_condition = new Property(28, String.class, "thing_road_condition", false, "THING_ROAD_CONDITION");
        public final static Property Thing_info = new Property(29, String.class, "thing_info", false, "THING_INFO");
        public final static Property Thing_prof = new Property(30, String.class, "thing_prof", false, "THING_PROF");
        public final static Property Thing_analysis = new Property(31, String.class, "thing_analysis", false, "THING_ANALYSIS");
        public final static Property Thing_law = new Property(32, String.class, "thing_law", false, "THING_LAW");
        public final static Property Thing_confirmation = new Property(33, String.class, "thing_confirmation", false, "THING_CONFIRMATION");
    }


    public InvolvedPersonDao(DaoConfig config) {
        super(config);
    }
    
    public InvolvedPersonDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"INVOLVED_PERSON\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"TYPE\" INTEGER NOT NULL ," + // 1: type
                "\"DATE\" INTEGER NOT NULL ," + // 2: date
                "\"INVOLVED_NAME\" TEXT," + // 3: involved_name
                "\"INVOLVED_SEX\" TEXT," + // 4: involved_sex
                "\"INVOLVED_NATIONALITY\" TEXT," + // 5: involved_nationality
                "\"INVOLVED_BIRTH_DATE\" TEXT," + // 6: involved_birth_date
                "\"INVOLVED_AGE\" TEXT," + // 7: involved_age
                "\"INVOLVED_DEGREE\" TEXT," + // 8: involved_degree
                "\"INVOLVED_NATIVE_PLACE\" TEXT," + // 9: involved_native_place
                "\"INVOLVED_DRIVE_LICENSE_TYPE\" TEXT," + // 10: involved_drive_license_type
                "\"INVOLVED_DRIVE_LICENSE_DATE\" TEXT," + // 11: involved_drive_license_date
                "\"INVOLVED_IDCARD\" TEXT," + // 12: involved_idcard
                "\"INVOLVED_NATIVE_ADDRESS\" TEXT," + // 13: involved_native_address
                "\"INVOLVED_ADDRESS\" TEXT," + // 14: involved_address
                "\"INVOLVED_MOBILE\" TEXT," + // 15: involved_mobile
                "\"CAR_NO\" TEXT," + // 16: car_no
                "\"CAR_TYPE\" TEXT," + // 17: car_type
                "\"THING_PERSONNEL_INVOLVED\" TEXT," + // 18: thing_personnel_involved
                "\"THING_CAR\" TEXT," + // 19: thing_car
                "\"THING_DATE\" TEXT," + // 20: thing_date
                "\"THING_ADDRESS\" TEXT," + // 21: thing_address
                "\"THING_REASON\" TEXT," + // 22: thing_reason
                "\"THING_LOSED\" TEXT," + // 23: thing_losed
                "\"THING_\" TEXT," + // 24: thing_
                "\"THING_11\" TEXT," + // 25: thing_11
                "\"THING_PERSONNEL_INVOLVED_BASIC\" TEXT," + // 26: thing_personnel_involved_basic
                "\"THING_CAR_BASIC\" TEXT," + // 27: thing_car_basic
                "\"THING_ROAD_CONDITION\" TEXT," + // 28: thing_road_condition
                "\"THING_INFO\" TEXT," + // 29: thing_info
                "\"THING_PROF\" TEXT," + // 30: thing_prof
                "\"THING_ANALYSIS\" TEXT," + // 31: thing_analysis
                "\"THING_LAW\" TEXT," + // 32: thing_law
                "\"THING_CONFIRMATION\" TEXT);"); // 33: thing_confirmation
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"INVOLVED_PERSON\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, InvolvedPerson entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getType());
        stmt.bindLong(3, entity.getDate());
 
        String involved_name = entity.getInvolved_name();
        if (involved_name != null) {
            stmt.bindString(4, involved_name);
        }
 
        String involved_sex = entity.getInvolved_sex();
        if (involved_sex != null) {
            stmt.bindString(5, involved_sex);
        }
 
        String involved_nationality = entity.getInvolved_nationality();
        if (involved_nationality != null) {
            stmt.bindString(6, involved_nationality);
        }
 
        String involved_birth_date = entity.getInvolved_birth_date();
        if (involved_birth_date != null) {
            stmt.bindString(7, involved_birth_date);
        }
 
        String involved_age = entity.getInvolved_age();
        if (involved_age != null) {
            stmt.bindString(8, involved_age);
        }
 
        String involved_degree = entity.getInvolved_degree();
        if (involved_degree != null) {
            stmt.bindString(9, involved_degree);
        }
 
        String involved_native_place = entity.getInvolved_native_place();
        if (involved_native_place != null) {
            stmt.bindString(10, involved_native_place);
        }
 
        String involved_drive_license_type = entity.getInvolved_drive_license_type();
        if (involved_drive_license_type != null) {
            stmt.bindString(11, involved_drive_license_type);
        }
 
        String involved_drive_license_date = entity.getInvolved_drive_license_date();
        if (involved_drive_license_date != null) {
            stmt.bindString(12, involved_drive_license_date);
        }
 
        String involved_idcard = entity.getInvolved_idcard();
        if (involved_idcard != null) {
            stmt.bindString(13, involved_idcard);
        }
 
        String involved_native_address = entity.getInvolved_native_address();
        if (involved_native_address != null) {
            stmt.bindString(14, involved_native_address);
        }
 
        String involved_address = entity.getInvolved_address();
        if (involved_address != null) {
            stmt.bindString(15, involved_address);
        }
 
        String involved_mobile = entity.getInvolved_mobile();
        if (involved_mobile != null) {
            stmt.bindString(16, involved_mobile);
        }
 
        String car_no = entity.getCar_no();
        if (car_no != null) {
            stmt.bindString(17, car_no);
        }
 
        String car_type = entity.getCar_type();
        if (car_type != null) {
            stmt.bindString(18, car_type);
        }
 
        String thing_personnel_involved = entity.getThing_personnel_involved();
        if (thing_personnel_involved != null) {
            stmt.bindString(19, thing_personnel_involved);
        }
 
        String thing_car = entity.getThing_car();
        if (thing_car != null) {
            stmt.bindString(20, thing_car);
        }
 
        String thing_date = entity.getThing_date();
        if (thing_date != null) {
            stmt.bindString(21, thing_date);
        }
 
        String thing_address = entity.getThing_address();
        if (thing_address != null) {
            stmt.bindString(22, thing_address);
        }
 
        String thing_reason = entity.getThing_reason();
        if (thing_reason != null) {
            stmt.bindString(23, thing_reason);
        }
 
        String thing_losed = entity.getThing_losed();
        if (thing_losed != null) {
            stmt.bindString(24, thing_losed);
        }
 
        String thing_ = entity.getThing_();
        if (thing_ != null) {
            stmt.bindString(25, thing_);
        }
 
        String thing_11 = entity.getThing_11();
        if (thing_11 != null) {
            stmt.bindString(26, thing_11);
        }
 
        String thing_personnel_involved_basic = entity.getThing_personnel_involved_basic();
        if (thing_personnel_involved_basic != null) {
            stmt.bindString(27, thing_personnel_involved_basic);
        }
 
        String thing_car_basic = entity.getThing_car_basic();
        if (thing_car_basic != null) {
            stmt.bindString(28, thing_car_basic);
        }
 
        String thing_road_condition = entity.getThing_road_condition();
        if (thing_road_condition != null) {
            stmt.bindString(29, thing_road_condition);
        }
 
        String thing_info = entity.getThing_info();
        if (thing_info != null) {
            stmt.bindString(30, thing_info);
        }
 
        String thing_prof = entity.getThing_prof();
        if (thing_prof != null) {
            stmt.bindString(31, thing_prof);
        }
 
        String thing_analysis = entity.getThing_analysis();
        if (thing_analysis != null) {
            stmt.bindString(32, thing_analysis);
        }
 
        String thing_law = entity.getThing_law();
        if (thing_law != null) {
            stmt.bindString(33, thing_law);
        }
 
        String thing_confirmation = entity.getThing_confirmation();
        if (thing_confirmation != null) {
            stmt.bindString(34, thing_confirmation);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, InvolvedPerson entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getType());
        stmt.bindLong(3, entity.getDate());
 
        String involved_name = entity.getInvolved_name();
        if (involved_name != null) {
            stmt.bindString(4, involved_name);
        }
 
        String involved_sex = entity.getInvolved_sex();
        if (involved_sex != null) {
            stmt.bindString(5, involved_sex);
        }
 
        String involved_nationality = entity.getInvolved_nationality();
        if (involved_nationality != null) {
            stmt.bindString(6, involved_nationality);
        }
 
        String involved_birth_date = entity.getInvolved_birth_date();
        if (involved_birth_date != null) {
            stmt.bindString(7, involved_birth_date);
        }
 
        String involved_age = entity.getInvolved_age();
        if (involved_age != null) {
            stmt.bindString(8, involved_age);
        }
 
        String involved_degree = entity.getInvolved_degree();
        if (involved_degree != null) {
            stmt.bindString(9, involved_degree);
        }
 
        String involved_native_place = entity.getInvolved_native_place();
        if (involved_native_place != null) {
            stmt.bindString(10, involved_native_place);
        }
 
        String involved_drive_license_type = entity.getInvolved_drive_license_type();
        if (involved_drive_license_type != null) {
            stmt.bindString(11, involved_drive_license_type);
        }
 
        String involved_drive_license_date = entity.getInvolved_drive_license_date();
        if (involved_drive_license_date != null) {
            stmt.bindString(12, involved_drive_license_date);
        }
 
        String involved_idcard = entity.getInvolved_idcard();
        if (involved_idcard != null) {
            stmt.bindString(13, involved_idcard);
        }
 
        String involved_native_address = entity.getInvolved_native_address();
        if (involved_native_address != null) {
            stmt.bindString(14, involved_native_address);
        }
 
        String involved_address = entity.getInvolved_address();
        if (involved_address != null) {
            stmt.bindString(15, involved_address);
        }
 
        String involved_mobile = entity.getInvolved_mobile();
        if (involved_mobile != null) {
            stmt.bindString(16, involved_mobile);
        }
 
        String car_no = entity.getCar_no();
        if (car_no != null) {
            stmt.bindString(17, car_no);
        }
 
        String car_type = entity.getCar_type();
        if (car_type != null) {
            stmt.bindString(18, car_type);
        }
 
        String thing_personnel_involved = entity.getThing_personnel_involved();
        if (thing_personnel_involved != null) {
            stmt.bindString(19, thing_personnel_involved);
        }
 
        String thing_car = entity.getThing_car();
        if (thing_car != null) {
            stmt.bindString(20, thing_car);
        }
 
        String thing_date = entity.getThing_date();
        if (thing_date != null) {
            stmt.bindString(21, thing_date);
        }
 
        String thing_address = entity.getThing_address();
        if (thing_address != null) {
            stmt.bindString(22, thing_address);
        }
 
        String thing_reason = entity.getThing_reason();
        if (thing_reason != null) {
            stmt.bindString(23, thing_reason);
        }
 
        String thing_losed = entity.getThing_losed();
        if (thing_losed != null) {
            stmt.bindString(24, thing_losed);
        }
 
        String thing_ = entity.getThing_();
        if (thing_ != null) {
            stmt.bindString(25, thing_);
        }
 
        String thing_11 = entity.getThing_11();
        if (thing_11 != null) {
            stmt.bindString(26, thing_11);
        }
 
        String thing_personnel_involved_basic = entity.getThing_personnel_involved_basic();
        if (thing_personnel_involved_basic != null) {
            stmt.bindString(27, thing_personnel_involved_basic);
        }
 
        String thing_car_basic = entity.getThing_car_basic();
        if (thing_car_basic != null) {
            stmt.bindString(28, thing_car_basic);
        }
 
        String thing_road_condition = entity.getThing_road_condition();
        if (thing_road_condition != null) {
            stmt.bindString(29, thing_road_condition);
        }
 
        String thing_info = entity.getThing_info();
        if (thing_info != null) {
            stmt.bindString(30, thing_info);
        }
 
        String thing_prof = entity.getThing_prof();
        if (thing_prof != null) {
            stmt.bindString(31, thing_prof);
        }
 
        String thing_analysis = entity.getThing_analysis();
        if (thing_analysis != null) {
            stmt.bindString(32, thing_analysis);
        }
 
        String thing_law = entity.getThing_law();
        if (thing_law != null) {
            stmt.bindString(33, thing_law);
        }
 
        String thing_confirmation = entity.getThing_confirmation();
        if (thing_confirmation != null) {
            stmt.bindString(34, thing_confirmation);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public InvolvedPerson readEntity(Cursor cursor, int offset) {
        InvolvedPerson entity = new InvolvedPerson( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getInt(offset + 1), // type
            cursor.getLong(offset + 2), // date
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // involved_name
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // involved_sex
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // involved_nationality
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // involved_birth_date
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // involved_age
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // involved_degree
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // involved_native_place
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // involved_drive_license_type
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // involved_drive_license_date
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // involved_idcard
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // involved_native_address
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // involved_address
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // involved_mobile
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // car_no
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // car_type
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // thing_personnel_involved
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // thing_car
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // thing_date
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // thing_address
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // thing_reason
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // thing_losed
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // thing_
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // thing_11
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // thing_personnel_involved_basic
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // thing_car_basic
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // thing_road_condition
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // thing_info
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // thing_prof
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // thing_analysis
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // thing_law
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33) // thing_confirmation
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, InvolvedPerson entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setType(cursor.getInt(offset + 1));
        entity.setDate(cursor.getLong(offset + 2));
        entity.setInvolved_name(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setInvolved_sex(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setInvolved_nationality(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setInvolved_birth_date(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setInvolved_age(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setInvolved_degree(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setInvolved_native_place(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setInvolved_drive_license_type(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setInvolved_drive_license_date(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setInvolved_idcard(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setInvolved_native_address(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setInvolved_address(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setInvolved_mobile(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setCar_no(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setCar_type(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setThing_personnel_involved(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setThing_car(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setThing_date(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setThing_address(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setThing_reason(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setThing_losed(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setThing_(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setThing_11(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setThing_personnel_involved_basic(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setThing_car_basic(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setThing_road_condition(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setThing_info(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setThing_prof(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setThing_analysis(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setThing_law(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setThing_confirmation(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(InvolvedPerson entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(InvolvedPerson entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(InvolvedPerson entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
